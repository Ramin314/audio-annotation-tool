services:
  app:
    build: .
    container_name: fastapi_app
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    command: uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio_store
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio_setup:
    container_name: minio_setup
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set myminio http://minio:9000 minioadmin minioadmin &&
      mc mb -p myminio/audio-files || true &&
      mc anonymous set public myminio/audio-files
      "
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app             # Mount source code
      - /app/node_modules           # Ensure container's node_modules is used
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true


volumes:
  postgres_data:
  minio_data:
